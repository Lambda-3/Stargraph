graphene {
  coreference {
    url = "http://coreference:5128/resolve"
    text-path = "text"
    wiki-path = "wiki"
    wiki-link-path = "link"
  }
}

excluded-properties = [
  "^rdfs:seeAlso$",
  "^dbp:imdb$",
  "^dbp:nndb$",
  "^dbp:viaf$",
  "^dbo:wikiPageID$"
  "^dbp:headerAlign$",
  "^dbp:footerAlign$",
  "^dbo:thumbnail$",
  "^dbp:caption$",
  "^dbp:cSpan$",
  "^dbp:image$",
  "^dbp:imageMap$",
  "^dbp:filename$",
  "^dbp:rows$",
  "^dbp:direction$",
  "^dbp:float$",
  "^dbp:right$",
  "^dbp:left$",
  "^dbp:width$",
  "^dbp:align$",
  "^dbp:alt$",
  "^dbp:lccn$",
  "^dbp:cctld$",
  "^dbp:latd$",
  "^dbp:longd$",
  "^dbp:latns$",
  "^dbp:latm$",
  "^dbp:longew$",
  "^dbp:longm$",
]


processor = {
  length-filter = {
    # null disables the filter for the specific component of the triple
    # The applied logic on each component of the triple is: s OR p OR o
    s: {min = 2, max = 256}
    p: {min = 4, max = 256}
    o: null
  }

  stop-property-filter = ${excluded-properties}

  regex-filter = {
    s: ["^wiki-commons:.+$", "^dbt:.+$"]
    p: ${excluded-properties}
    o: null
  }

  entity-splitter = {}

  sink-duplicate = {}

  entity-classifier = {
    relations = [
      "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
      "rdf:type",
      "http://purl.org/dc/terms/subject",
      "dct:subject"
    ]
  }

  namespace = {
    dbr: "http://dbpedia.org/resource/"
    dbp: "http://dbpedia.org/property/"
    dbo: "http://dbpedia.org/ontology/"
    dbc: "http://dbpedia.org/resource/Category:"
    rdfs: "http://www.w3.org/2000/01/rdf-schema#"
    schema: "http://schema.org/"
    dct: "http://purl.org/dc/terms/"
  }

  wordnet = {
    wordnet-dir = /usr/share/wordnet
  }

  passage-processor = {}
}

stargraph.rules = {
  #
  # Each supported language must have a section of rules here.
  #

  stop-pattern.en = [
    "^(How) .+$",
    "^(Give me a list of) .+$",
    "^(Give me all) .+$",
    "^(Give me the) .+$",
    "^(Give me) .+$",
    "^(Show me) .+$",
    "^(Is there) .+$",
    "^(What) .+$",
    "^(What is the) .+$",
    "^(What are the) .+$",
    "^(What was the) .+$",
    "^(What were the) .+$",
    "^(What is) .+$",
    "^(What are) .+$",
    "^(What was) .+$",
    "^(What were) .+$",
    "^(Who) .+$",
    "^(Who is) .+$",
    "^(Who are) .+$",
    "^(Who was) .+$",
    "^(Who were) .+$",
    "^(Who did) .+$",
    "^(When) .+$",
    "^(When is) .+$",
    "^(When are) .+$",
    "^(When was) .+$",
    "^(When were) .+$",
    "^(When the) .+$",
    "^(Where) .+$",
    "^(Where is) .+$",
    "^(Where are) .+$",
    "^(Where was) .+$",
    "^(Where were) .+$",
    "^(Where did) .+$",
    "^(How many) .+$",
    "^(In which) .+$",
    "^(For which) .+$",
    "^(Through which) .+$",
    "^(On which) .+$",
    "^(there a) .+$",
    "^(Show) .+$",
    "^(List) .+$",
    "^(Give) .+$",
    "^(Is) .+$",
    "^(Are) .+$",
    "^(Do) .+$",
    "^(Does) .+$",
    "^(are there) .+$",
    "^(is there) .+$",
    "^(Did) .+$",
    "^(did) .+$",
    "^(does) .+$",
    "^(How often) .+$",
    "^(Which) .+$",
    "^(When) .+$",
    "^(Under which) .+$",
    "^(To which) .+$",
    "^(Was) .+$",
    ".* (other) .*",
    ".* (was) .*",
    ".* (are) .*",
    ".* (list of) .*",
    ".* (all) .*",
    ".* (some) .*",
    ".* (me) .*",
    ".* (there) .*",
    ".* (their) .*",
    ".* (the) .*",
    ".* (of) .*",
    ".*(TYPE_1).*",
    ".*(STOP_1).*"
  ]

  syntatic-pattern.en = [

    # The key must map to the Model Types Enumeration:
    #  INSTANCE, CLASS, COMPLEX_CLASS, PROPERTY, VARIABLE, VALUE, OPERATION,
    #  POS, TEMPORAL, TYPE, STOP, ATCLASS
    #
    # The order is relevant. Split the array if need to interleave rules.

    {
      STOP: [
        ".* (did) .*"
      ]
    }

    {
      OPERATION: [
        ".* (same type as) .*",
        ".* (same) .*",
        ".* (second highest) .*",
        ".* (largest) .*",
        ".* (highest after) .*",
        ".* (first) .*",
        ".* (more than) .*",
        ".* (less than) .*",
        ".* (earlier than) .*",
        ".* (between) .*",
        ".* (more) .*",
        ".* (less) .*",
        ".* (most) .*",
        ".* (past) .*",
        ".* (still) .*",
        ".* (also) .*"
      ]
    }

    {
      OPERATION: [
        ".* (JJR IN) .*",
        ".* (JJ JJS) .*",
        ".* (JJS) .*"
      ]
    }

    {
      INSTANCE: [
        ".*IN DT (NNP NNPS CC NNP NNP).*",
        ".*VBD (DT NN IN DT NN IN NNP).*",
        ".*VBD (NNP , NNP CC NNP) VB.*",
        ".*IN (NNP , NNP).*",
        ".*VBD (NNP CC NNP).*",
        ".*IN (NNP CC NNP).*",
        ".*(NNP IN NNPS NNP).*",
        ".*(NNP NNP IN NNP).*",
        ".*(NNP NNP PRP).*",
        ".*(NNP IN NNP).*",
        ".*(NNP NNP NNP).*",
        ".*(JJ NNP NNP).*",
        ".*(JJ NNP).*",
        ".*(NNP NNP CD).*",
        ".*(NNP CD NNP).*",
        ".*(NNP NNP).*",
        ".*(JJ INSTANCE).*",
        ".*(NNP CD).*"
      ]
    }

    {
      CLASS: [
        ".*WDT (NNP NNS).*",
        ".*WDT (NNP NN).*",
      ]
    }

    {
      INSTANCE: [
        ".*(NNPS).*",
        ".*(NNP).*",
      ]
    }

    {
      CLASS: [
        ".*(NNS IN JJ NN).*",
        ".*(NN IN JJ NN).*",
        ".*(JJ NNS NNS).*",
        ".*(JJ NN NNS).*",
        ".*(NN NN NNS).*",
        ".*(NN NN NN).*"
      ]
    }

    {
      ATCLASS: [
        ".*WDT (JJ NNS).*",
        ".*WDT (JJ NN).*"
      ]
    }

    {
      CLASS: [
        ".*DT (NNS) IN.*",
        ".*DT (NN) IN.*"
      ]
    }

    {
      TYPE: [
        ".* (is the) .*",
        ".* (are the) .*",
        ".* (a type) .*"
      ]
    }

    {
      PROPERTY: [
        ".*(VBZ VBN VBN).*",
        ".*(VBZ VBN VBN).*",
        ".*(VBG TO VB).*",
        ".*(VBP VBN).*",
        ".*(VBD VBN).*",
        ".*(VBP NN).*",
        ".*(POS NNS NNS).*",
        ".*(POS NN NN).*",
        ".*(POS NN).*",
      ]
    }

    {
      CLASS: [
        ".*DT (NN) INSTANCE.*"
      ]
    }

    {
      ATCLASS: [
        ".* WDT (NNS).*",
        ".* WDT (NN).*"
      ]
    }

    {
      PROPERTY: [
        ".*(VBD NN NNS) IN.*",
        ".*CD (NNS).*",
        ".*CD (NN).*",
        ".*(VBG).*",
        ".*(VBN).*",
        ".*(VBP).*",
        ".*(VBD).*",
        ".*(VBZ).*",
        ".*(VB).*"
        ".*(JJ).*"
      ]
    }

    {
      POS: [
        ".*(POS).*"
      ]
    }

    {
      CLASS: [
        ".*(JJ JJ NNS).*",
        ".*(JJ JJ NN).*",
        ".*WDT (NNP NNP NN).*",
        ".*DT (JJ NN IN NN) VB.*",
        ".*DT (JJ NN IN NNP) VB.*",
        ".*VBZ DT (JJ NNP NN).*",
        ".*DT (NNP NN) VB.*"
      ]
    }

    {
      ATCLASS: [
        ".*WDT (NNP NNS).*",
        ".*WDT (NNP NN).*"
      ]
    }

    {
      CLASS: [
        ".*IN (NN).*",
        ".*(NNP NNP NN).*",
        ".*(NNP NN NN).*",
        ".*(NNP NNS).*",
        ".*(NN JJ NNS).*",
        ".*(NN NNS).*",
        ".*(NNS NNS).*",
        ".*(NN NN).*",
        ".*(JJ NNS).*",
        ".*(JJ NN).*",
        ".*(NNP NN).*",
        ".*(NNS).*",
        ".*(NN).*"
      ]
    }

    {
      VALUE: [
        ".*(CD CD).*",
        ".*(CD).*"
      ]
    }
  ]

  planner-pattern.en =   [
    {
      "CLASS_1": [
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 from INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 PROPERTY_1 in": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 PROPERTY_1 in CLASS_2 in INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "CLASS_1 that INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "OPERATION_1 CLASS_1 from INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 PROPERTY_1 in CLASS_2 in INSTANCE_2": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 The INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 have OPERATION_1 VALUE_1 PROPERTY_1": [
        "?VAR_1 PROPERTY_1 ?VAR_2",
        "?VAR_1 TYPE ATCLASS_1",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "ATCLASS_1 OPERATION_1 VALUE_1 PROPERTY_1": [
        "?VAR_1 PROPERTY_1 ?VAR_2",
        "?VAR_1 TYPE ATCLASS_1",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "CLASS_1 OPERATION_1 VALUE_1 PROPERTY_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_1 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "OPERATION_1 CLASS_1 on INSTANCE_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 CLASS_1 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "PROPERTY_1 in INSTANCE_1 with OPERATION_1 VALUE_1 PROPERTY_2": [
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 PROPERTY_2 ?VAR2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "PROPERTY_1 by INSTANCE_1 with OPERATION_1 VALUE_1 PROPERTY_2": [
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 PROPERTY_2 ?VAR2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "PROPERTY_1 PROPERTY_2 with OPERATION_1 VALUE_1 CLASS_1": [
        "?VAR_1 TYPE PROPERTY_2",
        "?VAR_2 CLASS_1 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_3",
        "?VAR_3 OPERATION_1 VALUE_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 OPERATION_1 VALUE_1 CLASS_1": [
        "?VAR_1 TYPE PROPERTY_1",
        "?VAR_1 CLASS_1 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "OPERATION_1 CLASS_1 in INSTANCE_1": [
        "?VAR_1 ?VAR_3 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 OPERATION_1 ?VAR_2",
        "?VAR_2 OPERATION_1 NULL"
      ]
    },
    {
      "CLASS_1 that PROPERTY_1 in INSTANCE_1": [
        "?VAR_1 PROPERTY_1 INSTANCE_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 in INSTANCE_1": [
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 by INSTANCE_1": [
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_1 CLASS_1 INSTANCE_1": [
        "?VAR_1 PROPERTY_1 INSTANCE_1"
      ]
    },
    {
      "CLASS_1 in INSTANCE_1": [
        "?VAR_1 ?VAR_2 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 of INSTANCE_1": [
        "?VAR_1 ?VAR_2 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 on INSTANCE_1": [
        "?VAR_1 ?VAR_2 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "OPERATION_1 CLASS_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 OPERATION_1 ?VAR_2",
        "?VAR_2 OPERATION_1 NULL"
      ]
    },
    {
      "CLASS_1 PROPERTY_2 within TEMPORAL_1 VALUE_1 PROPERTY_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_2 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "CLASS_1 that PROPERTY_1 in INSTANCE_1 and PROPERTY_2 in INSTANCE_2": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 PROPERTY_2 INSTANCE_2"
      ]
    },
    {
      "INSTANCE_1 TYPE_1 PROPERTY_1 which INSTANCE_2 CLASS_1": [
        "?VAR_1 PROPERTY_1 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 in CLASS_2 PROPERTY_2 by INSTANCE_1": [
        "?VAR_2 PROPERTY_1 INSTANCE_1",
        "?VAR_2 PROPERTY_2 VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 by INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "PROPERTY_1 by INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 PROPERTY_2": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 CLASS_1 PROPERTY_1 OPERATION_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 ?VAR_3 INSTANCE_1",
        "?VAR_1 ?VAR_4 ?VAR_2",
        "?VAR_2 OPERATION_1 NULL"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 and INSTANCE_2 OPERATION_1 CLASS_1": [
        "?VAR_1 CLASS_1 INSTANCE_1",
        "?VAR_2 CLASS_1 INSTANCE_2",
        "?VAR_1 OPERATION_1 ?VAR_2"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 PROPERTY_1 through": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 CLASS_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 OPERATION_1 VALUE_1 CLASS_1": [
        "?VAR_1 TYPE ATCLASS_1",
        "?VAR_1 CLASS_1 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "CLASS_1 from INSTANCE_1": [
        "INSTANCE_1 ?VAR_2 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 CLASS_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "a PROPERTY_1 CLASS_1 that PROPERTY_2": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_2 ?VAR_2"
      ]
    },
    {
      "INSTANCE_1 CLASS_1 with OPERATION_1 CLASS_2": [
        "?VAR_1 ?VAR_3 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 CLASS_2 ?VAR_2"
      ]
    },
    {
      "TYPE_1 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 that PROPERTY_1 to INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 PROPERTY_1 CLASS_1"
      ]
    },
    {
      "INSTANCE_1 a CLASS_1": [
        "INSTANCE_1 TYPE CLASS_1"
      ]
    },
    {
      "INSTANCE_2 OPERATION_1 CLASS_1 than INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1",
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_1 OPERATION_1 ?VAR_2"
      ]
    },
    {
      "PROPERTY_1 CLASS_2 INSTANCE_2 CLASS_1 The INSTANCE_1": [
        "INSTANCE_1 TYPE CLASS_1",
        "INSTANCE_1 PROPERTY_1 ?VAR_2"
      ]
    },
    {
      "PROPERTY_1 PROPERTY_2 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 CLASS_1 INSTANCE_2": [
        "INSTANCE_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 in VALUE_1": [
        "?VAR_1 TYPE ATCLASS_1",
        "?VAR_1 PROPERTY_1 VALUE_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 from": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 re in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 in CLASS_1": [
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "TYPE_1 OPERATION_1 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 OPERATION_1 ?VAR_1",
        "?VAR_1 OPERATION_1 NULL"
      ]
    },
    {
      "INSTANCE_1 OPERATION_1": [
        "INSTANCE_1 OPERATION_1"
      ]
    },
    {
      "OPERATION_1 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 OPERATION_1 ?VAR_1",
        "?VAR_1 OPERATION_1 NULL"
      ]
    },
    {
      "INSTANCE_2 OPERATION_1 INSTANCE_1": [
        "INSTANCE_2 ?VAR_3 ?VAR_1",
        "INSTANCE_1 ?VAR_4 ?VAR_2",
        "?VAR_1 OPERATION_1 ?VAR_2"
      ]
    },
    {
      "INSTANCE_1 CLASS_1": [
        "?VAR_1 ?VAR_2 INSTANCE_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "PROPERTY_1 PROPERTY_2 TYPE_1 CLASS_1": [
        "PROPERTY_2 TYPE CLASS_1"
      ]
    },
    {
      "INSTANCE_2 PROPERTY_1 PROPERTY_2 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 CLASS_1 INSTANCE_1 PROPERTY_2": [
        "INSTANCE_1 CLASS_1 ?VAR_1",
        "?VAR_1 TYPE PROPERTY_1"
      ]
    },
    {
      "PROPERTY_1 CLASS_1 CLASS_2": [
        "CLASS_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 on INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_2 within OPERATION_1 VALUE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1",
        "?VAR_1 PROPERTY_2 ?VAR_2",
        "?VAR_2 TYPE CLASS_1",
        "?VAR_1 OPERATION_1 VALUE_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 as CLASS_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "TYPE_1 OPERATION_1 CLASS_1 on INSTANCE_1": [
        "INSTANCE_1 ?VAR_3 ?VAR_2",
        "?VAR_2 ATCLASS_1 ?VAR_1",
        "?VAR_2 TYPE CLASS_1",
        "?VAR_2 OPERATION_1 NULL"
      ]
    },
    {
      "TYPE_1 CLASS_1 on INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_2 has OPERATION_1 CLASS_1": [
        "INSTANCE_1 CLASS_2 ?VAR_1",
        "INSTANCE_1 OPERATION_2 ?VAR_2",
        "?VAR_1 OPERATION_1 ?VAR_2"
      ]
    },
    {
      "PROPERTY_1 PROPERTY_2 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_2 ?VAR_2",
        "?VAR_2 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 after INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 after INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 INSTANCE_2"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 CLASS_2": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "a PROPERTY_2 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "CLASS_2 PROPERTY_1 in OPERATION_1 CLASS_1 as INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_1 TYPE CLASS_2",
        "?VAR_1 OPERATION_1 ?VAR_2"
      ]
    },
    {
      "CLASS_1 PROPERTY_2 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "A PROPERTY_1 which ATCLASS_1 TYPE_1 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 PROPERTY_1 his CLASS_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 OPERATION_1 VALUE_1": [
        "CLASS_1 TYPE ?VAR_1",
        "?VAR_1 PROPERTY_1 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1"
      ]
    },
    {
      "INSTANCE_1 OPERATION_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 OPERATION_1 NULL"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 PROPERTY_2 to": [
        "INSTANCE_1 PROPERTY_1 ?VAR_2",
        "?VAR_2 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 in a CLASS_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 ?ANY CLASS_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 OPERATION_1 as INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 OPERATION_1 NULL"
      ]
    },
    {
      "ATCLASS_1 TYPE_1 INSTANCE_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 for CLASS_1": [
        "CLASS_1 PROPERTY_1 ?VAR_2",
        "?VAR_2 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "CLASS_1 CLASS_2 that PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 from INSTANCE_1 PROPERTY_2 OPERATION_1 VALUE_1 and VALUE_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 PROPERTY_2 ?VAR_2",
        "?VAR_2 OPERATION_1 VALUE_1",
        "?VAR_2 OPERATION_1 VALUE_2"
      ]
    },
    {
      "INSTANCE_1 OPERATION_2 CLASS_1 OPERATION_1 its CLASS_2": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_2 OPERATION_1 ?VAR_3"
      ]
    },
    {
      "ATCLASS_1 CLASS_1 INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 for INSTANCE_1 and INSTANCE_2": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "PROPERTY_3 PROPERTY_1 PROPERTY_2 in CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "a PROPERTY_1 CLASS_1": [
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "PROPERTY_1 by INSTANCE_2 PROPERTY_2 by INSTANCE_1": [
        "?VAR_1 PROPERTY_2 INSTANCE_1",
        "?VAR_1 ?ANY INSTANCE_2"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 The INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "INSTANCE_1": [
        "?VAR_1 ?ANY INSTANCE_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_2 INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 CLASS_1 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 to a INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 CLASS_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 CLASS_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 TYPE_1 OPERATION_1 INSTANCE_1": [
        "?VAR_1 TYPE ATCLASS_1",
        "?VAR_1 OPERATION_1 INSTANCE_1"
      ]
    },
    {
      "ATCLASS_1 CLASS_1 PROPERTY_1 by INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "ATCLASS_1 INSTANCE_1 PROPERTY_1 his OPERATION_1 CLASS_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_2",
        "?VAR_2 ATCLASS_1 ?VAR_1",
        "?VAR_2 OPERATION_1 NULL"
      ]
    },
    {
      "PROPERTY_1 CLASS_1 INSTANCE_1 PROPERTY_2 from": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "OPERATION_2 PROPERTY_1 in CLASS_1 in which INSTANCE_1 PROPERTY_2 OPERATION_2 his CLASS_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_2"
      ]
    },
    {
      "INSTANCE_2 CLASS_1 PROPERTY_1 a INSTANCE_1 CLASS_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_2"
      ]
    },
    {
      "PROPERTY_3 INSTANCE_1 in PROPERTY_1 Around INSTANCE_2 in VALUE_1 PROPERTY_2 PROPERTY_3 by INSTANCE_2": [
        "INSTANCE_1 PROPERTY_3 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 INSTANCE_1 in OPERATION_1 CLASS_1 by INSTANCE_2": [
        "INSTANCE_2 CLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 CLASS_1 INSTANCE_1 PROPERTY_2 an INSTANCE_2": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_1",
        "?VAR_1 PROPERTY_2 INSTANCE_2"
      ]
    },
    {
      "CLASS_1 with INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "INSTANCE_2 TYPE_1 PROPERTY_1 which ATCLASS_1 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 in CLASS_1 PROPERTY_2 CLASS_2 INSTANCE_1": [
        "?VAR_1 PROPERTY_2 INSTANCE_1",
        "?VAR_1 PROPERTY_1 ATCLASS_1"
      ]
    },
    {
      "PROPERTY_1 PROPERTY_2 by CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 under INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_1 in CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 by INSTANCE_1 in CLASS_1 INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 CLASS_1 INSTANCE_2"
      ]
    },
    {
      "ATCLASS_1 The INSTANCE_1 PROPERTY_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 for CLASS_2 that PROPERTY_3 CLASS_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_2 ?VAR_2",
        "?VAR_2 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 CLASS_1 that PROPERTY_2 a INSTANCE_1": [
        "?VAR_2 PROPERTY_2 INSTANCE_1",
        "?VAR_2 TYPE CLASS_1",
        "?VAR_2 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE ATCLASS_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 PROPERTY_2 CLASS_1 from a CLASS_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 INSTANCE_1 PROPERTY_3 in PROPERTY_2 INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 PROPERTY_2 INSTANCE_2"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 CLASS_1 INSTANCE_2 PROPERTY_2": [
        "INSTANCE_2 CLASS_1 ?VAR_1",
        "?VAR_1 PROPERTY_2 INSTANCE_1"
      ]
    },
    {
      "From which ATCLASS_1 TYPE_1 INSTANCE_1": [
        "INSTANCE_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 in VALUE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1",
        "?VAR_1 ?ANY VALUE_1"
      ]
    },
    {
      "ATCLASS_1 PROPERTY_1 CLASS_1": [
        "CLASS_1 ATCLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 CLASS_2 PROPERTY_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 CLASS_1 CLASS_2 and CLASS_3 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_1 PROPERTY_1 through": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 TYPE_1 PROPERTY_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 TYPE_1 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 from INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_2 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_2 PROPERTY_1 for INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 INSTANCE_2 PROPERTY_1": [
        "INSTANCE_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 from INSTANCE_1 PROPERTY_1 OPERATION_1 VALUE_1 and VALUE_2": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "VALUE_1 OPERATION_1  VALUE_2"
      ]
    },
    {
      "CLASS_1 TYPE_1 INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 CLASS_2 PROPERTY_1 by INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 to a INSTANCE_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_1 INSTANCE_1"
      ]
    },
    {
      "CLASS_1 CLASS_2 PROPERTY_1 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1",
        "?VAR_1 TYPE CLASS_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 in VALUE_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_1 VALUE_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 OPERATION_1 INSTANCE_1": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 PROPERTY_1 ?VAR_2",
        "INSTANCE_1 PROPERTY_1 ?VAR_3",
        "?VAR_2 OPERATION_1 ?VAR_3"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 by CLASS_2 PROPERTY_2 in INSTANCE_1": [
        "INSTANCE_1 PROPERTY_2 ?VAR_2",
        "?VAR_2 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 in CLASS_2 as well as in CLASS_3": [
        "?VAR_1 TYPE CLASS_1",
        "?VAR_1 TYPE CLASS_2",
        "?VAR_1 TYPE CLASS_3"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 in INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 INSTANCE_2"
      ]
    },
    {
      "PROPERTY_1 in INSTANCE_2 PROPERTY_2 INSTANCE_1": [
        "INSTANCE_1 PROPERTY_1 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 I PROPERTY_2 for INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "PROPERTY_1 that INSTANCE_1 PROPERTY_2": [
        "INSTANCE_1 PROPERTY_2 ?VAR_1"
      ]
    },
    {
      "CLASS_1 PROPERTY_1 through INSTANCE_1": [
        "INSTANCE_1 CLASS_1 ?VAR_1"
      ]
    },
    {
      "INSTANCE_1 PROPERTY_1 to INSTANCE_2": [
        "INSTANCE_1 PROPERTY_1 INSTANCE_2"
      ]
    }
  ]

  query-pattern.en = {
    ASK: [
      "^[i|I]s .+\\?$",
      "^[a|A]re .+\\?$",
      "^[w|W]as .+\\?$",
      "^[w|W]ere .+\\?$",
      "^[d|D]id .+\\?$",
      "^[d|D]o .+\\?$",
      "^[d|D]oes .+\\?$"
    ]

    SELECT: [
      "^[g|G]ive .+$",
      "^[s|S]how .+$",
      "^[n|N]ame .+$",
      "^[l|L]ist .+$",
      "^[w|W]hat .+\\?$",
      "^[w|W]here .+\\?$",
      "^[w|W]ho .+\\?$",
      "^[w|W]hich .+\\?$",
      "^[w|W]hen .+\\?$",
      "^[h|H]ow .+\\?$"
    ]

    AGGREGATE: [
      "^[h|H]ow many .+\\?$",
      "^[h|H]ow often .+\\?$"
    ]
  }

}


stargraph = {
  data.root-dir = /usr/share/stargraph/data
  opennlp.models-dir = /usr/share/stargraph/opennlp

  networking.rest-url = "http://localhost:8917"

  distributional-service.rest-url = "http://localhost:8916/relatedness"
  distributional-service.corpus = wiki-2014

  elastic.bulk.concurrency = 0 # means all CPUs available
  elastic.bulk.actions = 1000
  elastic.cluster-name = StarGraphV2Cluster
  elastic.servers = ["localhost:9300"]
  elastic.index.prefix-name = null

  #
  # These are the default supported indexed types.
  # New models should declare their own type or rely on the _default_ dynamic model.
  # As expected the key names are reserved for the built-in models.
  #
  elastic.mapping = {

    "_default_": {
      "dynamic_templates": [
        {
          "objects": {
            "match": "*",
            "match_mapping_type": "object",
            "mapping": {
              "type": "nested",
              "include_in_parent": true
            }
          }
        }
      ]
    }

    "entities": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "id": {
          "type": "keyword",
          "index": true
          "doc_values": false
        },
        "value": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        },
        "otherValues": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        }
      }
    }

    "relations": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "id": {
          "type": "keyword",
          "index": false,
          "doc_values": false
        },
        "value": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        },
        "synonyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "hyponyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "hypernyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        }
      }
    }

    "facts": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "s": {
          "type": "nested",
          "properties": {
            "id": {
              "type": "keyword",
              "index": true
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "otherValues": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "p": {
          "type": "nested",
          "properties": {
            "id": {
              "type": "keyword",
              "index": true,
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "o": {
          "type": "nested",
          "properties": {
            "complex": {
              "type": "boolean",
              "index": true,
              "doc_values": false
            }
            "id": {
              "type": "keyword",
              "index": true,
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "otherValues": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "dataType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "language": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            }
          }
        }
      }
    }

    "documents": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "title": {
          "type": "keyword",
          "index": true
          "doc_values": false
        },
        "text": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        },
        "passages": {
          "type": "nested",
          "properties": {
            "text": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "entities": {
              "type": "nested",
              "properties": {
                "id": {
                  "type": "keyword",
                  "index": true,
                  "doc_values": false
                },
                "value": {
                  "type": "text",
                  "analyzer": "english",
                  "doc_values": false
                },
                "otherValues": {
                  "type": "text",
                  "analyzer": "english",
                  "doc_values": false
                }
              }
            }
          }
        }
      }
    }
  }

  indexer.factory.class = net.stargraph.core.index.DefaultIndexerFactory
  annotator.factory.class = net.stargraph.core.impl.corenlp.CoreNLPAnnotatorFactory

  kb.dbpedia-2016 = {
    language = EN

    namespaces = {
      dbr: "http://dbpedia.org/resource/"
    }

    triple-store.namespace.mapping = default

    triple-store.hdt.file = "http://data.lambda3.org/dbpedia_en-2016.hdt"
    triple-store.hdt.use-index = no

    model.facts = {
      provider.class = net.stargraph.core.FactProviderFactory

      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          entity-classifier: ${processor.entity-classifier}
        },
        {
          regex-filter: ${processor.regex-filter}
        },
      ]

      elastic = ${stargraph.elastic}
    }

    model.entities = {
      provider.class = net.stargraph.core.EntityProviderFactory
      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
      ]
      elastic = ${stargraph.elastic}
    }

    model.relations = {
      provider.class = net.stargraph.core.PropertyProviderFactory

      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          stop-property-filter: ${processor.stop-property-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
        {
          wordnet: ${processor.wordnet}
        },
      ]

      elastic = ${stargraph.elastic}
    }
  }

  kb.obama = {
    language = EN

    namespaces = {
      dbr: "http://dbpedia.org/resource/"
    }

    triple-store.namespace.mapping = default

    triple-store.hdt.file = "http://data.lambda3.org/obama.hdt"
    triple-store.hdt.use-index = no

    model.facts = {
      provider.class = net.stargraph.core.FactProviderFactory

      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          entity-classifier: ${processor.entity-classifier}
        },
        {
          regex-filter: ${processor.regex-filter}
        },
      ]

      elastic = ${stargraph.elastic}
    }

    model.entities = {
      provider.class = net.stargraph.core.EntityProviderFactory
      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
      ]
      elastic = ${stargraph.elastic}
    }

    model.relations = {
      provider.class = net.stargraph.core.PropertyProviderFactory

      processors = [
        {
          length-filter: ${processor.length-filter}
        },
        {
          stop-property-filter: ${processor.stop-property-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
        {
          wordnet: ${processor.wordnet}
        },
      ]

      elastic = ${stargraph.elastic}
    }

    model.documents = {
      provider.class = net.stargraph.core.DocumentProviderFactory

      processors = [
        {
          passage-processor: {
            language = ${stargraph.kb.obama.language}
            entity-searcher-dbId = obama
          }
        }
      ]

      elastic = ${stargraph.elastic}
    }
  }
}